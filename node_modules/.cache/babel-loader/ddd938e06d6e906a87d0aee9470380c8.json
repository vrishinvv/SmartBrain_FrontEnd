{"ast":null,"code":"var _jsxFileName = \"/home/vrishin/Desktop/face_recognition_fullstack/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Rank from './Components/Rank/Rank';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai'; //initialise api key for clarifai\n\nconst app = new Clarifai.App({\n  apiKey: 'ac1b2620ef984e0d978ec5bda70be38f'\n}); //this can be put directly in app, but, we can just define it outside to keep the code in app clean\n//We can play around with particles, by reading up its documentation and usage\n//ex: just see what happens to the bg, if you increase the density value \n\nconst particlesParams = {\n  particles: {\n    number: {\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}; ///our driver code, more like the main of our app\n\nclass App extends Component {\n  //out constructor, which initialises ans also happens to define the state of our app\n  constructor() {\n    super();\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box; //DOM manipulation\n\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = evnet => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log('click'); //calling the api-face-detect here\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        email: '',\n        name: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  } //----------------------------------------------------------------------------------------------------------\n  //start of various function calls, which mostly handles state transitoins\n  //note that we havent used redux here\n  //be wary of async operations\n\n\n  //----------------------------------------------------------------------------------------------------------\n  //basic render syntax, to render our components\n  render() {\n    //destructuring our state variables, to avoid \"this.state\" before every use\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      //self explanatory piece of code\n      //remeber to wrap things in {} while using javaScript code anywhere here\n      React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesParams,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Logo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Rank, {\n        name: this.state.user.name,\n        entries: this.state.user.entries,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FaceRecognition, {\n        box: box,\n        imageUrl: imageUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vrishin/Desktop/face_recognition_fullstack/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Signin","Register","Particles","Clarifai","app","App","apiKey","particlesParams","particles","number","value","density","enable","value_area","constructor","displayFaceBox","box","setState","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onInputChange","event","input","target","onButtonSubmit","evnet","imageUrl","state","console","log","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn","loadUser","user","id","name","email","entries","joined","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Rank from './Components/Rank/Rank';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai'\n\n//initialise api key for clarifai\nconst app = new Clarifai.App({\n apiKey: 'ac1b2620ef984e0d978ec5bda70be38f'\n});\n\n//this can be put directly in app, but, we can just define it outside to keep the code in app clean\n//We can play around with particles, by reading up its documentation and usage\n//ex: just see what happens to the bg, if you increase the density value \nconst particlesParams={\n  particles: {\n    number:{\n      value:60,\n      density:{\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n\n\n\n///our driver code, more like the main of our app\nclass App extends Component {\n  //out constructor, which initialises ans also happens to define the state of our app\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        email: '',\n        name: '',\n        entries: 0,\n        joined: '',\n      }\n    }\n  }\n\n  //----------------------------------------------------------------------------------------------------------\n  //start of various function calls, which mostly handles state transitoins\n  //note that we havent used redux here\n  //be wary of async operations\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  calculateFaceLocation = (data) =>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    //DOM manipulation\n    const image = document.getElementById('inputimage');\n    const width= Number(image.width);\n    const height= Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = (evnet) =>{\n    this.setState({imageUrl: this.state.input});\n    console.log('click');\n\n    //calling the api-face-detect here\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err=> console.log(err));\n  }\n\n  onRouteChange = (route) =>{\n    if(route === 'signout') {\n      this.setState({isSignedIn: false});\n    }else if (route === 'home'){\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  loadUser =(data) =>{\n    this.setState(\n      {\n        user: {\n          id: data.id,\n          name:data.name,\n          email:data.email,\n          entries:data.entries,\n          joined:data.joined\n        }\n      }\n    )\n  }\n  //----------------------------------------------------------------------------------------------------------\n  //basic render syntax, to render our components\n  render(){\n    //destructuring our state variables, to avoid \"this.state\" before every use\n    const {isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      //self explanatory piece of code\n      //remeber to wrap things in {} while using javaScript code anywhere here\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesParams} \n        />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\n        { route === 'home'\n          ?  <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries ={this.state.user.entries}/>\n              {/*See how i am passing a function as a PROP*/}\n              <ImageLinkForm onInputChange={this.onInputChange} \n                           onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n              route === 'signin'\n              ? <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n              : <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}