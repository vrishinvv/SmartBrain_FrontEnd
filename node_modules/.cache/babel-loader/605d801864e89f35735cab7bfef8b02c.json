{"ast":null,"code":"var _jsxFileName = \"/home/vrishin/Desktop/face_recognition_fullstack/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai'; //initialise api key\n\nconst app = new Clarifai.App({\n  apiKey: 'ac1b2620ef984e0d978ec5bda70be38f'\n});\nconst particlesParams = {\n  particles: {\n    number: {\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFce = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementId();\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = evnet => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log('click'); //calling the api-face-detect here\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(function (response) {\n        this.calculateFaceLocation(response);\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      }, function (err) {// there was an error\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesParams,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vrishin/Desktop/face_recognition_fullstack/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","Clarifai","app","App","apiKey","particlesParams","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFce","outputs","regions","region_info","bounding_box","image","document","getElementId","onInputChange","event","setState","input","target","onButtonSubmit","evnet","imageUrl","state","console","log","models","predict","FACE_DETECT_MODEL","then","response","err","box","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai'\n\n//initialise api key\nconst app = new Clarifai.App({\n apiKey: 'ac1b2620ef984e0d978ec5bda70be38f'\n});\n\nconst particlesParams={\n  particles: {\n    number:{\n      value:60,\n      density:{\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {} \n    }\n  }\n\n  calculateFaceLocation = (data) =>{\n    const clarifaiFce = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementId();\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = (evnet) =>{\n    this.setState({imageUrl: this.state.input});\n    console.log('click');\n    //calling the api-face-detect here\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(\n        function(response) {\n          this.calculateFaceLocation(response);\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      },\n      function(err) {\n        // there was an error\n      }\n    );\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesParams} \n        />\n        <Navigation />\n        <Logo />\n        <Rank/>\n        {/*See how i am passing a function as a PROP*/}\n        <ImageLinkForm onInputChange={this.onInputChange} \n                       onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}